
In one year, 98% of the atoms in your body will have been replaced, but your memory remains. The same principle applies to cloud-based storage: Disks and servers are replaced, but (ideally) your files remain. By running a number of model-based simulations I was able to prioritize the biggest risk factors in cloud-based storage systems and estimate the long-term rate of data loss.


--------
Software developers in the shipping industry waste a lot of effort on interfacing between systems with their own representation for “the port of Rotterdam” or “a standard 40-foot container” even though these concepts have been standardized by the industry and the UN. In an industry-funded project we designed, implemented, and documented APIs fit to share between all applications in container shipping, easily adaptable to Python, Java, Javascript and other popular platforms. I coordinated expert teams in Singapore and Copenhagen.
Consulting for one of the world’s leading container shipping liners, I took over the ownership of an existing linear regression model, prototyped in Excel, for predicting the amount and types of cargo for hundreds of weekly port calls. I retrieved data dumps from a number of different systems and analyzed these using custom-written Python scripts. The results allowed me to remove variables from the model while improving its precision. The Python scripts eventually replaced the previous prototype across the organization.

The state of Denmark strives to preserve Danish cultural heritage for future research. Our team was responsible for continually archiving all web pages associated with Denmark. We implemented a custom-written Java-based solution that would scale to a large amount of servers being continually added over the years. 8 years after its launch, the archive is still growing each day and currently stores more than 0.5 petabyte mirrored in separate cities.


When a large container vessel calls at a major port, one person must decide the 3D placement of thousands of containers in a few hours. The cost of one bad plan can be five digits in $. Our team created a linear programming model of a container ship, implemented to efficiently calculate a cost-effective plan for where to stow every container and visualize the resulting physical forces stressing the vessel’s hull. We implemented APIs to access necessary data from many different systems, along with procedures for keeping all of this data coherent.

Issuu.com has millions of online magazines. Each is characterized by many features, like its words, its length, its date and place of publication, its language, and its topic. Our team used Python deployed on Amazon’s cloud for continuously retrieving this information from a variety of APIs and storing it in formats tailored for efficiency (e.g. custom schemas in Apache SOLR or REDIS). Our frontend APIs give millisecond responses to requests for publications that match a user’s individually balanced weighting of all the characteristics. See http://issuu.com/